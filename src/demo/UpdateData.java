/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demo;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FireBlazeTSETSR
 */
public class UpdateData extends javax.swing.JFrame {

    /**
     * Creates new form UpdateData
     */
    public UpdateData() {
        initComponents();
        /*jComboBox2.setVisible(false);
        jComboBox3.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jDateChooser1.setVisible(false);
        jDateChooser2.setVisible(false);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Select a table:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Table", "Dvorana", "Spored", "Film", "Zvrst", "Film_oseba", "oseba", "vstopnica", "kupec", "odzivi", "users", "userrights" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 160, -1));

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 140, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 540, 240));

        jButton2.setText("Delete selected row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 140, -1));

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        setSize(new java.awt.Dimension(598, 559));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        switch (jComboBox1.getSelectedIndex()) {
            case 1:
                fillJtable("DVORANA");
                break;
            case 2:

                fillJtable("SPORED");

                break;
            case 3:

                fillJtable("FILM");

                break;
            case 4:

                fillJtable("ZVRST");

                break;
            case 5:

                fillJtable("FILM_OSEBA");

                break;
            case 6:

                fillJtable("OSEBA");

                break;
            case 7:

                fillJtable("VSTOPNICA");

                break;
            case 8:

                fillJtable("KUPEC");

                break;
            case 9:

                fillJtable("ODZIVI");

                break;
            case 10:
                fillJtable("USERS");
                break;
            case 11:
                fillJtable("USERRIGHTS");
                break;
            case 0:
                jTable1.setModel(new DefaultTableModel());
                break;
            default:
                System.out.println("How did we get here?");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Connection con = OracleConnection.getConnection();
            Statement st = con.createStatement();
            con.setAutoCommit(false);
            
            
            String table = jComboBox1.getSelectedItem().toString();
            if (table.equals("Select Table")) {
                JOptionPane.showMessageDialog(rootPane, "Please select a table before continuing!");
                return;
            }
            
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            System.out.println("Count: " + model.getRowCount());
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    if (jTable1.getValueAt(i, j) == null) {
                        System.out.println("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = '" + jTable1.getValueAt(i, j) + "' where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                        st.executeUpdate("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = '" + jTable1.getValueAt(i, j) + "' where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                    } else {
                        
                        if (model.getColumnName(j).toString().equals("TRAJANJE")) {
                            System.out.println("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','HH:MI') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                            st.executeUpdate("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','HH:MI') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                        }
                        
                        else if (model.getColumnName(j).equals("DATUMPREDVAJANJA")) {
                            System.out.println("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','dd-mm-yyyy') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                            st.executeUpdate("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','dd-mm-yyyy') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                        }
                        
                        else if (model.getColumnName(j).toString().equals("DATUMROJSTVA")) {
                            System.out.println("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','dd-mm-yyyy') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                            st.executeUpdate("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = to_date('" + jTable1.getValueAt(i, j).toString() + "','dd-mm-yyyy') where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                        }
                        
                        else {
                            System.out.println("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = '" + jTable1.getValueAt(i, j).toString().replace("'", "''") + "' where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                            st.executeUpdate("update " + jComboBox1.getSelectedItem().toString() + " set " + model.getColumnName(j) + " = '" + jTable1.getValueAt(i, j).toString().replace("'", "''") + "' where " + model.getColumnName(0) + " = " + jTable1.getValueAt(i, 0));
                        }
                        con.commit();
                    }
                }
                System.out.println();
                
            }
            con.close();
            st.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int row = jTable1.getSelectedRow();
        int id = 0;
        if (row == -1) {
            JOptionPane.showMessageDialog(rootPane, "Please select a row!");
            return;
        }

        System.out.println(row);

        try {
            Connection con = OracleConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = null;
            con.setAutoCommit(false);
            rs = st.executeQuery("select * from " + jComboBox1.getSelectedItem().toString());
            con.commit();

            int count = 0;
            while (rs.next()) {
                if (count == row) {
                    id = rs.getInt(1);
                    break;
                } else {
                    count++;
                }
            }

            System.out.println("id:" + id);

            rs.close();
            st.execute("delete from " + jComboBox1.getSelectedItem().toString() + " where " + jTable1.getColumnName(0) + " = " + id);
            con.commit();
            st.close();
            con.close();
            fillJtable(jComboBox1.getSelectedItem().toString());
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new MainOverview().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateData().setVisible(true);
            }
        });
    }

    public void fillJtable(String table) {
        try {
            Connection con = OracleConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = null;
            con.setAutoCommit(false);
            switch (table) {
                case "SPORED":
                    rs = st.executeQuery("select IDSPORED, IDDVORANA, IDFILM, to_char(DATUMPREDVAJANJA,'dd-mm-yyyy') as DATUMPREDVAJANJA from SPORED " +
                            "order by IDSPORED");
                    break;
                case "FILM":
                    rs = st.executeQuery("select IDFILM, IME, to_char(TRAJANJE,'HH:MI') as TRAJANJE, IDZVRST from film " +
                            "order by idfilm asc");
                    break;
                case "OSEBA":
                    rs = st.executeQuery("select IDOSEBA, IME, PRIIMEK, to_char(DATUMROJSTVA,'dd-mm-yyyy') as DATUMROJSTVA from oseba " +
                            "order by IDOSEBA asc");
                    break;
                default:
                    rs = st.executeQuery("select * from " + table);
                    break;
            }
            con.commit();

            DefaultTableModel model = new DefaultTableModel();

            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            for (int i = 1; i <= columnCount; i++) {
                model.addColumn(rsmd.getColumnName(i));
            }
            jTable1.setModel(model);
            while (rs.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                model.addRow(row);
            }
            con.close();
            rs.close();
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(UpdateData.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
